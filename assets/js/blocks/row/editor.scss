
$grid-columns: 12;

$grid-breakpoints: (
  xs: 0,
  sm: $break-small,
  md: $break-medium,
  lg: $break-large,
  xl: $break-xlarge,
);

$container-max-widths: (
  sm: map-get($grid-breakpoints, "sm") - 36,
  md: map-get($grid-breakpoints, "md") - 48,
  lg: map-get($grid-breakpoints, "lg") - 32,
  xl: map-get($grid-breakpoints, "xl") - 60,
);

@mixin flex-full-height() {
  display: flex;
  flex-direction: column;
  flex: 1;
}

/**
 * Full alignment
 */
[data-type="my/row"][data-align="full"] {
  > .block-editor-block-list__block-edit {
    > [data-block] {
      > div {
        > .block-editor-inner-blocks {
          padding-left: $block-padding;
        	padding-right: $block-padding;
        }
      }
    }
  }

  &.is-selected,
  &.has-child-selected {
    > .block-editor-block-list__block-edit {
      > [data-block] {
        > div {
          > .block-editor-inner-blocks {
            padding-left: $block-padding * 2 !important;
          	padding-right: $block-padding * 2 !important;
          }
        }
      }
    }
  }
}

/**
 * Row block.
 */
.wp-block-my-row {

  .block-editor-block-list__block {
    // Disable max width on all inner blocks.
    max-width: none;
  }

	> .block-editor-inner-blocks {
    // Setup container.
    margin-left: auto;
    margin-right: auto;

    > .block-editor-block-list__layout {

      > .block-list-appender {
        display: none !important;
      }

      // Setup flex box.
      display: flex;
   		flex-wrap: wrap;

      // Setup flex columns.
      > .block-editor-block-list__block {
        @include flex-full-height();

        flex-basis: 100%;

        @each $breakpoint in map-keys($grid-breakpoints) {
          $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

          @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
            // Provide basic `.col-{bp}` classes for equal-width flexbox columns
            &.has-col#{$infix} {
              flex-basis: 0;
              flex-grow: 1;
            }

            @for $i from 1 through $grid-columns {
              &.has-col#{$infix}-#{$i} {
                @include make-col($i, $grid-columns);
              }
            }

            // Order
            @for $i from 0 through $grid-columns {
              &.has-order#{$infix}-#{$i} { order: $i; }
            }

            // Offset
            @for $i from 0 through ($grid-columns - 1) {
              @if not ($infix == "" and $i == 0) {
                &.has-offset#{$infix}-#{$i} {
                  @include make-col-offset($i, $grid-columns);
                }
              }
            }
          }
        }

        > .block-editor-block-list__block-edit {
          @include flex-full-height();

          > [data-block] {
            @include flex-full-height();
            margin-top: 0;
            margin-bottom: 0;

            > .wp-block-my-column {
              @include flex-full-height();

              > .block-editor-inner-blocks {
                margin-top: -$block-padding * 2;
      					margin-bottom: -$block-padding * 2;

                > .block-editor-block-list__layout {
                  > .block-list-appender {
                    margin-top: $block-padding * 2;
                		margin-bottom: $block-padding * 2;
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  &.has-fixed-container {
    > .block-editor-inner-blocks {
      @include make-container-max-widths();
    }
  }
}

/**
 * Vertical Alignment
 */
.wp-block-my-column {
  &.is-vertically-aligned-top {
  	justify-content: flex-start;
  }

  &.is-vertically-aligned-center {
  	justify-content: center;
  }

  &.is-vertically-aligned-bottom {
  	justify-content: flex-end;
  }
}

/**
 * Column block.
 */
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/column"] {
  > .block-editor-block-list__block-edit {
    > .block-editor-block-mover {
      display: none !important;
    }
    > [data-block] {
      > .wp-block-my-column {
        > .block-editor-inner-blocks {
          > .block-editor-block-list__layout {
            > .block-list-appender {
              margin: $block-padding;
            }
          }
        }
      }
    }
  }
  // Selected
  &.is-selected {
    > .block-editor-block-list__block-edit {
      > [data-block] {
        > .wp-block-my-column {
          > .block-editor-inner-blocks {
            > .block-editor-block-list__layout {
              > .block-list-appender {
                margin: $block-padding 0;
              }
            }
          }
        }
      }
    }
  }
}

/**
 * Add extra padding when the parent block is selected, for easier interaction.
 */
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/row"].is-selected > .block-editor-block-list__block-edit > [data-block] > div > .block-editor-inner-blocks,
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/row"].has-child-selected > .block-editor-block-list__block-edit > [data-block] > div > .block-editor-inner-blocks,
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/column"].is-selected > .block-editor-block-list__block-edit > [data-block] > div > .block-editor-inner-blocks,
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/column"].has-child-selected > .block-editor-block-list__block-edit > [data-block] > div > .block-editor-inner-blocks {
	padding: $block-padding;

  // Negate this padding for the placeholder.
	> .components-placeholder {
		margin: -$block-padding;
		width: calc(100% + #{$block-padding * 2});
	}
}
