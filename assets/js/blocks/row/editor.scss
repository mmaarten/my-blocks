
@import '~bootstrap/scss/mixins';

$grid-columns: 12;

$grid-gutter-width: $block-padding * 2;

$grid-breakpoints: (
  xs: 0,
  sm: $break-small,
  md: $break-medium,
  lg: $break-large,
  xl: $break-xlarge,
);

$container-max-widths: (
  sm: map-get($grid-breakpoints, "sm") - 36,
  md: map-get($grid-breakpoints, "md") - 48,
  lg: map-get($grid-breakpoints, "lg") - 32,
  xl: map-get($grid-breakpoints, "xl") - 60,
);

.wp-block-my-row {

  /**
   * Remove inner blocks max widths.
   */
  > .block-editor-inner-blocks > .block-editor-block-list__layout .block-editor-block-list__block {
      max-width: none;
  }

  /**
   * Setup container.
   */
  > .block-editor-inner-blocks {
    @include make-container();
  }

  &.has-fixed-container > .block-editor-inner-blocks {
    @include make-container-max-widths();
  }

  /**
   * Create grid.
   */
  > .block-editor-inner-blocks > .block-editor-block-list__layout {
    @include make-row();

    > [data-type="my/column"] {
      // Remove auto margins.
      margin-left: 0;
      margin-right: 0;

      @each $breakpoint in map-keys($grid-breakpoints) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        // Allow columns to stretch full width below their breakpoints
        @for $i from 1 through $grid-columns {
          &.col#{$infix}-#{$i} {
            width: 100%;
            padding-left: $grid-gutter-width / 2;
            padding-right: $grid-gutter-width / 2;
          }
        }
        &.col#{$infix} {
          width: 100%;
          padding-left: $grid-gutter-width / 2;
          padding-right: $grid-gutter-width / 2;
        }

        @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
          // Provide basic `.col-{bp}` classes for equal-width flexbox columns
          &.col#{$infix} {
            flex-basis: 0;
            flex-grow: 1;
            max-width: 100%;
          }
          &.col#{$infix}-auto {
            flex: 0 0 auto;
            width: auto;
            max-width: 100%;
          }

          @for $i from 1 through $grid-columns {
            &.col#{$infix}-#{$i} {
              @include make-col($i, $grid-columns);
            }
          }

          @for $i from 0 through $grid-columns {
            &.order#{$infix}-#{$i} { order: $i; }
          }

          @for $i from 0 through ($grid-columns - 1) {
            @if not ($infix == "" and $i == 0) {
              &.offset#{$infix}-#{$i} {
                @include make-col-offset($i, $grid-columns);
              }
            }
          }
        }
      }

      > .editor-block-list__block-edit {
        margin-left: 0;
        margin-right: 0;

        > [data-block] {
          margin-top: $block-padding;
          margin-bottom: $block-padding;
        }
      }
    }
  }
}

// Row block: Add padding when the block is selected, for easier interaction.
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/row"].has-child-selected > .block-editor-block-list__block-edit > [data-block] > .wp-block-my-row,
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/row"].is-selected > .block-editor-block-list__block-edit > [data-block] > .wp-block-my-row {
  // Increase container x spacing.
  > .block-editor-inner-blocks {
		padding-left: ( $grid-gutter-width / 2 ) + $block-padding;
    padding-right: ( $grid-gutter-width / 2 ) + $block-padding;
	}
}

// Column block: Add padding when the block is selected, for easier interaction.
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/column"].has-child-selected > .block-editor-block-list__block-edit > [data-block] > .wp-block-my-column,
.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/column"].is-selected > .block-editor-block-list__block-edit > [data-block] > .wp-block-my-column {
	> .block-editor-inner-blocks {
    padding: $block-padding;
    > .block-editor-block-list__layout {
      margin-top: -$block-padding * 2;
      margin-bottom: -$block-padding * 2;
      > .block-list-appender {
    		margin-left: 0;
    		margin-right: 0;
    	}
    }
	}
}
