
/**
 * Make selection frame fit row dimensions
 */

.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/row"]::before {
  top: 0;
  bottom: 0;
}

.components-popover.block-editor-block-list__block-popover .components-popover__content .block-editor-block-contextual-toolbar[data-type="my/row"] {
  margin-bottom: -1px;
}

/**
 * Make selection frame fit column dimensions
 */

.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/column"]::before {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.components-popover.block-editor-block-list__block-popover .components-popover__content .block-editor-block-contextual-toolbar[data-type="my/column"] {
  margin-left: 0;
  margin-bottom: -1px;
}

/**
 * Setup container
 */

.wp-block-my-row {
  > .block-editor-inner-blocks {
    @include make-container();
  }
  &.has-fixed-container > .block-editor-inner-blocks {
    @include make-container-max-widths();
  }
}

/**
 * Setup grid
 */

.wp-block-my-row {
  > .block-editor-inner-blocks {
    > .block-editor-block-list__layout {
      @include make-row();

      > .wp-block[data-type="my/column"] {
        @include make-col-ready();
        margin-top: 0;
        margin-bottom: 0;

        // Disable max width on all inner blocks.
        .wp-block {
          max-width: none;
        }

        // Loop breakpoints
        @each $breakpoint in map-keys($grid-breakpoints) {
          $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

          // Above breakpoint.
          @include media-breakpoint-up($breakpoint, $grid-breakpoints) {

            // Make flexbox column.
            &.has-col#{$infix} {
              flex-basis: 0;
              flex-grow: 1;
            }

            // Make flexbox column and set width.
            @for $i from 1 through $grid-columns {
              &.has-col#{$infix}-#{$i} {
                @include make-col($i, $grid-columns);
              }
            }

            // Order
            @for $i from 0 through $grid-columns {
              &.has-order#{$infix}-#{$i} { order: $i; }
            }

            // Offset
            @for $i from 0 through ($grid-columns - 1) {
              @if not ($infix == "" and $i == 0) {
                &.has-offset#{$infix}-#{$i} {
                  @include make-col-offset($i, $grid-columns);
                }
              }
            }

            // Align items

            &[class*="has-align-items#{$infix}"] {
              display: flex;
            }

            &.has-align-items#{$infix}-start    { align-items: flex-start !important; }
            &.has-align-items#{$infix}-end      { align-items: flex-end !important; }
            &.has-align-items#{$infix}-center   { align-items: center !important; }
            &.has-align-items#{$infix}-baseline { align-items: baseline !important; }
            &.has-align-items#{$infix}-stretch  { align-items: stretch !important; }

            // Justify content

            &[class*="has-justify-content#{$infix}"] {
              display: flex;
            }

            &.has-justify-content#{$infix}-start   { justify-content: flex-start !important; }
            &.has-justify-content#{$infix}-end     { justify-content: flex-end !important; }
            &.has-justify-content#{$infix}-center  { justify-content: center !important; }
            &.has-justify-content#{$infix}-between { justify-content: space-between !important; }
            &.has-justify-content#{$infix}-around  { justify-content: space-around !important; }
          }
        }
      }
    }
  }
}
