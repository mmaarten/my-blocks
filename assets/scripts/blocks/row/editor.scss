
$grid-columns: 12;

$grid-breakpoints: (
  xs: 0,
  sm: $break-small,
  md: $break-medium,
  lg: $break-large,
  xl: $break-xlarge,
);

$container-max-widths: (
  sm: map-get($grid-breakpoints, "sm") - 36,
  md: map-get($grid-breakpoints, "md") - 48,
  lg: map-get($grid-breakpoints, "lg") - 32,
  xl: map-get($grid-breakpoints, "xl") - 60,
);

/**
 * Setup columns container.
 */
.wp-block-my-row {
  > .block-editor-inner-blocks {
    // Setup container.
    margin-left: auto;
    margin-right: auto;
  }
  &.has-fixed-container > .block-editor-inner-blocks {
    @include make-container-max-widths();
  }
}

.components-popover.block-editor-block-list__block-popover .components-popover__content .block-editor-block-contextual-toolbar[data-type="my/row"] {
  margin-bottom: -1px;
  margin-left: -14px;
}

.components-popover.block-editor-block-list__block-popover .components-popover__content .block-editor-block-contextual-toolbar[data-type="my/row"][data-align="full"] {
  margin-left: 0;
}

.components-popover.block-editor-block-list__block-popover .components-popover__content .block-editor-block-contextual-toolbar[data-type="my/column"] {
  margin-bottom: -1px;
  margin-left: 0;
}

.editor-styles-wrapper .block-editor-block-list__block[data-type="my/row"] {
  margin-top: 0;
  margin-bottom: 0;
}

.block-editor-block-list__layout .block-editor-block-list__block[data-type="my/row"]:before {
  top: 0;
  bottom: 0;
}

.wp-block[data-type="my/row"][data-align="full"] .wp-block-my-row > .block-editor-inner-blocks > .block-editor-block-list__layout {
  margin-left: 0;
  margin-right: 0;
}

.wp-block-my-row {
  .block-editor-block-list__block {
    // Disable max width on all inner blocks.
    max-width: none !important;

    &:before {
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }
  > .block-editor-inner-blocks {
    > .block-editor-block-list__layout {
      @include make-row(30px);

      > .wp-block[data-type="my/column"] {
        @include make-col-ready(30px);
        margin-top: 0;
        margin-bottom: 0;

        // On mobile columns are full width.
        flex-basis: 100%;

        // Loop breakpoints
        @each $breakpoint in map-keys($grid-breakpoints) {
          $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

          // Above breakpoint.
          @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
            // Make flexbox column.
            &.has-col#{$infix} {
              flex-basis: 0;
              flex-grow: 1;
            }

            // Make flexbox column and set width.
            @for $i from 1 through $grid-columns {
              &.has-col#{$infix}-#{$i} {
                @include make-col($i, $grid-columns);
              }
            }

            // Order
            @for $i from 0 through $grid-columns {
              &.has-order#{$infix}-#{$i} { order: $i; }
            }

            // Offset
            @for $i from 0 through ($grid-columns - 1) {
              @if not ($infix == "" and $i == 0) {
                &.has-offset#{$infix}-#{$i} {
                  @include make-col-offset($i, $grid-columns);
                }
              }
            }

            // Vertical alignment
            // display: flex;
            // flex-direction: column;
            // flex: 1;
            //
            // &.has-align-items#{$infix}-start    { justify-content: flex-start !important; }
            // &.has-align-items#{$infix}-center   { justify-content: center !important; }
            // &.has-align-items#{$infix}-end      { justify-content: flex-end !important; }
          }
        }
      }
    }
  }
}
