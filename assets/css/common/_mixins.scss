//
// Unset all properties
//
// Javascript code to generate list:
// <code>
// const props = window.getComputedStyle(document.body, null);
// let list = [];
// for (let i = 0; i < props.length; i++) {
//   let prop = props.item(i);
//   list.push( `${ prop }: unset;` )
// }
// console.log( list.join("\n") );
// </code>
//
//

@mixin unset-all() {
  &,
  &:before,
  &:after {
    animation-delay: unset;
    animation-direction: unset;
    animation-duration: unset;
    animation-fill-mode: unset;
    animation-iteration-count: unset;
    animation-name: unset;
    animation-play-state: unset;
    animation-timing-function: unset;
    background-attachment: unset;
    background-blend-mode: unset;
    background-clip: unset;
    background-color: unset;
    background-image: unset;
    background-origin: unset;
    background-position: unset;
    background-repeat: unset;
    background-size: unset;
    border-bottom-color: unset;
    border-bottom-left-radius: unset;
    border-bottom-right-radius: unset;
    border-bottom-style: unset;
    border-bottom-width: unset;
    border-collapse: unset;
    border-image-outset: unset;
    border-image-repeat: unset;
    border-image-slice: unset;
    border-image-source: unset;
    border-image-width: unset;
    border-left-color: unset;
    border-left-style: unset;
    border-left-width: unset;
    border-right-color: unset;
    border-right-style: unset;
    border-right-width: unset;
    border-top-color: unset;
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-top-style: unset;
    border-top-width: unset;
    bottom: unset;
    box-shadow: unset;
    box-sizing: unset;
    break-after: unset;
    break-before: unset;
    break-inside: unset;
    caption-side: unset;
    clear: unset;
    clip: unset;
    color: unset;
    content: unset;
    cursor: unset;
    direction: unset;
    display: unset;
    empty-cells: unset;
    float: unset;
    font-family: unset;
    font-kerning: unset;
    font-size: unset;
    font-stretch: unset;
    font-style: unset;
    font-variant: unset;
    font-variant-ligatures: unset;
    font-variant-caps: unset;
    font-variant-numeric: unset;
    font-variant-east-asian: unset;
    font-weight: unset;
    height: unset;
    image-rendering: unset;
    isolation: unset;
    justify-items: unset;
    justify-self: unset;
    left: unset;
    letter-spacing: unset;
    line-height: unset;
    list-style-image: unset;
    list-style-position: unset;
    list-style-type: unset;
    margin-bottom: unset;
    margin-left: unset;
    margin-right: unset;
    margin-top: unset;
    max-height: unset;
    max-width: unset;
    min-height: unset;
    min-width: unset;
    mix-blend-mode: unset;
    object-fit: unset;
    object-position: unset;
    offset-distance: unset;
    offset-path: unset;
    offset-rotate: unset;
    opacity: unset;
    orphans: unset;
    outline-color: unset;
    outline-offset: unset;
    outline-style: unset;
    outline-width: unset;
    overflow-anchor: unset;
    overflow-wrap: unset;
    overflow-x: unset;
    overflow-y: unset;
    padding-bottom: unset;
    padding-left: unset;
    padding-right: unset;
    padding-top: unset;
    pointer-events: unset;
    position: unset;
    resize: unset;
    right: unset;
    scroll-behavior: unset;
    speak: unset;
    table-layout: unset;
    tab-size: unset;
    text-align: unset;
    text-align-last: unset;
    text-decoration: unset;
    text-decoration-line: unset;
    text-decoration-style: unset;
    text-decoration-color: unset;
    text-decoration-skip-ink: unset;
    text-underline-position: unset;
    text-indent: unset;
    text-rendering: unset;
    text-shadow: unset;
    text-size-adjust: unset;
    text-overflow: unset;
    text-transform: unset;
    top: unset;
    touch-action: unset;
    transition-delay: unset;
    transition-duration: unset;
    transition-property: unset;
    transition-timing-function: unset;
    unicode-bidi: unset;
    vertical-align: unset;
    visibility: unset;
    white-space: unset;
    widows: unset;
    width: unset;
    will-change: unset;
    word-break: unset;
    word-spacing: unset;
    z-index: unset;
    zoom: unset;
    backface-visibility: unset;
    column-count: unset;
    column-gap: unset;
    column-rule-color: unset;
    column-rule-style: unset;
    column-rule-width: unset;
    column-span: unset;
    column-width: unset;
    backdrop-filter: unset;
    align-content: unset;
    align-items: unset;
    align-self: unset;
    flex-basis: unset;
    flex-grow: unset;
    flex-shrink: unset;
    flex-direction: unset;
    flex-wrap: unset;
    justify-content: unset;
    grid-auto-columns: unset;
    grid-auto-flow: unset;
    grid-auto-rows: unset;
    grid-column-end: unset;
    grid-column-start: unset;
    grid-template-areas: unset;
    grid-template-columns: unset;
    grid-template-rows: unset;
    grid-row-end: unset;
    grid-row-start: unset;
    row-gap: unset;
    hyphens: unset;
    order: unset;
    perspective: unset;
    perspective-origin: unset;
    shape-outside: unset;
    shape-image-threshold: unset;
    shape-margin: unset;
    transform: unset;
    transform-origin: unset;
    transform-style: unset;
    user-select: unset;
    buffered-rendering: unset;
    clip-path: unset;
    clip-rule: unset;
    mask: unset;
    filter: unset;
    flood-color: unset;
    flood-opacity: unset;
    lighting-color: unset;
    stop-color: unset;
    stop-opacity: unset;
    color-interpolation: unset;
    color-interpolation-filters: unset;
    color-rendering: unset;
    fill: unset;
    fill-opacity: unset;
    fill-rule: unset;
    marker-end: unset;
    marker-mid: unset;
    marker-start: unset;
    mask-type: unset;
    shape-rendering: unset;
    stroke: unset;
    stroke-dasharray: unset;
    stroke-dashoffset: unset;
    stroke-linecap: unset;
    stroke-linejoin: unset;
    stroke-miterlimit: unset;
    stroke-opacity: unset;
    stroke-width: unset;
    alignment-baseline: unset;
    baseline-shift: unset;
    dominant-baseline: unset;
    text-anchor: unset;
    writing-mode: unset;
    vector-effect: unset;
    paint-order: unset;
    d: unset;
    cx: unset;
    cy: unset;
    x: unset;
    y: unset;
    r: unset;
    rx: unset;
    ry: unset;
    caret-color: unset;
    line-break: unset;
    // Modern browsers
    all: unset;
  }
}


@mixin my-make-grid-columns($prefix, $columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through $columns {
      #{$prefix}-col#{$infix}-#{$i} {
        @extend %grid-column;
      }
    }
    #{$prefix}-col#{$infix},
    #{$prefix}-col#{$infix}-auto {
      @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      #{$prefix}-col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      #{$prefix}-col#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: 100%; // Reset earlier grid tiers
      }

      @for $i from 1 through $columns {
        #{$prefix}-col#{$infix}-#{$i} {
          @include make-col($i, $columns);
        }
      }

      #{$prefix}-order#{$infix}-first { order: -1; }

      #{$prefix}-order#{$infix}-last { order: $columns + 1; }

      @for $i from 0 through $columns {
        #{$prefix}-order#{$infix}-#{$i} { order: $i; }
      }

      // `$columns - 1` because offsetting by the width of an entire row isn't possible
      @for $i from 0 through ($columns - 1) {
        @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
          #{$prefix}-offset#{$infix}-#{$i} {
            @include make-col-offset($i, $columns);
          }
        }
      }
    }
  }
}
